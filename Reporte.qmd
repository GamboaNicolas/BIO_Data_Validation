---
format: 
  pdf:
    fig-pos: "H"
    tbl-cap-location: bottom
lang: es
echo: FALSE
message: FALSE
warning: FALSE
geometry:
  - top= 25mm
  - left= 20mm
  - right = 20mm
  - bottom = 25mm
  - heightrounded
header-includes:
  - \usepackage{ragged2e}
  - \usepackage{hyperref}
  - \usepackage{float}
  - \floatplacement{table}{H}
---


```{r Carga de librerias y funciones}
library(tidyverse)

```

```{r Configuraciones predeterminadas}
knitr::opts_chunk$set(fig.align = "center", out.width = "100%")

set.seed("2126519")

theme_set(theme_bw())
```

::: {.center data-latex=""}

\vspace{3cm}

```{r logo facultad, echo=F, include = T, out.width= "60%"}
knitr::include_graphics("Archivos/logounr.png")
```

\pagenumbering{gobble}

\vspace{5cm}

\Large
**LICENCIATURA EN ESTADÍSTICA**

\vspace{1cm}

\Large
**Trabajo Práctico 1: Validación**


\vspace{0.3cm}
\large

*Bioestadística*

\vspace{8cm}

\large

**Autores: Rocío Canteros - Nicolas Gamboa**

**Docentes: Nora Arnesi - Cristina Cuesta - Gino Bartolelli**

**2025**
\normalsize
\newpage
\hypersetup{linkcolor = black}
\tableofcontents


\newpage
\pagenumbering{arabic}

:::

\newpage

# Introducción

Se llevó a cabo un estudio de investigación clínica multicéntrico con el fin de implementar estándares
mundiales de crecimiento fetal que faciliten la detección temprana de alteraciones en
el desarrollo del feto dentro del últero, y de esta manera reducir la morbi-mortalidad perinatal
asociada con el crecimiento. Durante el período de reclutamiento, las mujeres admitidas
en alguna de las clínicas de salud participantes cursando su primer trimestre de embarazo
fueron invitadas a formar parte del estudio. Aquellas que cumplieron con los criterios de elegibilidad
y dieron su consentimiento fueron seguidas según un esquema de visitas programado
a las 14, 18, 24, 28, 32, 36 y 40 semanas de gestación. En cada visita, se tomaron medidas
antropométricas del feto por medio de un ultrasonido.

# Objetivo

Basandose en el formulario de admisión respondido por 1000 mujeres, se debe realizar un proceso minusioso de validación con el fin de evaluar la calidad de los datos obtenidos y detectar errores sistemáticos en el llenado (BUSCAR SINONIMOS) de los formularios.

```{r, message=F, warning=F, echo=F}
library(dplyr)
library(stringr)
library(lubridate)
library(readxl)
library(patchwork)
library(egg)

datos <- read_xlsx("Archivos/adm.xlsx") |> 
  mutate(id = 1:n())


reglas <-  tribble(
  ~id,  ~desc,                                      ~cond,          
  "Regla 1", "pais fuera de la lista",                   "!(countrycode %in% c(4, 11, 14, 23, 31, 48, 54, 65, 72, 97))",
  "Regla 2", "ID en formato DD/MM/YYYY-AA",              "stringr::str_detect(patientid,pattern = '^[:digit:]{2}/[:digit:]{2}/[:digit:]{4}-[:upper:]{2}$', negate = T) | is.na(dmy(substr(patientid,1,10),quiet = T))",
  "Regla 3", "Fecha de entrevista en formato DD/MM/YYYY","stringr::str_detect(interview,pattern = '^[:digit:]{2}/[:digit:]{2}/[:digit:]{4}$', negate = T) | is.na(dmy(interview,quiet = T))",
  "Regla 4", "Fechas congruentes(edad > 18)",            "as.numeric(dmy(interview,quiet = T) - dmy(substr(patientid,1,10),quiet = T))/365 < 18",
  "Regla 5", "Grupo étnico entre las opciones",          "!(ethnicgroup %in% c(1,2,3,4))",
  "Regla 6", "Elegible SCR dentro de opciones",          "!(scr %in% c(1,2))",
  "Regla 7", "Elegible USSCR dentro de opciones",        "!(usscr %in% c(1,2))",
  "Regla 8", "Consentimiento dentro de opciones",        "!(consent %in% c(1,2))",
  "Regla 9", "Número del sujeto en el formato adecuado", "stringr::str_detect(subjectnumber,pattern = '^[:digit:]{9}$', negate = T)",
  #Regla "r10", "Enrolamiento correcto",                   "scr != 2 | usscr != 2 | consent != 2",
  "Regla 10", "Enrolamiento correcto",                   "((scr == 1 | usscr == 1 | consent == 1) & !is.na(subjectnumber)) | ((scr == 2 & usscr == 2 & consent == 2) & is.na(subjectnumber))" ,
  #Regla "r11", "Número del sujeto correcto",              "substr(subjectnumber, 1, 3) != paste0(0,countrycode) & substr(subjectnumber, 1, 3) != paste0(0, 0, countrycode)",
  "Regla 11", "Número del sujeto correcto",              "as.numeric(substr(subjectnumber, 1, 3)) != countrycode",
  "Regla 12", "Grupo étnico respondido",                 "is.na(ethnicgroup)",
  #Regla "r13", "Número del sujeto completado",            "is.na(subjectnumber)",
  "Regla 13", "Código de país completado",               "is.na(countrycode)",
  "Regla 14", "scr completado",                          "is.na(scr)",
  "Regla 15", "usscr completado",                        "is.na(usscr)",
  "Regla 16", "consent completado",                      "is.na(consent)",
  "Regla 17", "ID pasiente completado",                  "is.na(patientid)",
  "Regla 18", "Fecha de entrevista completada",          "is.na(interview)"
  )




# ==============================================================================
#                                   VALIDACIÓN
# ==============================================================================

# Funcion validador()
# argumentos:
# - datos: conjunto de validacion
# - id : nombre de la columna en (datos) con el identificador
# - cond : nombre de la columna en (datos) con la condicion
# salida: vector nombrado
validador <- function(datos, id, cond){
  reglas <- datos[[cond]]
  names(reglas) <- datos[[id]]
  reglas
}

# Funcion validar()
# argumentos:
# - datos : conjunto de datos a validar
# - id : nombre de la columna en (datos) con el identificador
# - validador: salida de validador()
# salida: tibble con el resultado de la validación
validar <- function(datos, id, validador){
  sapply(
    validador,
    function(x) eval(parse(text = x), datos)
  ) |>
    dplyr::as_tibble() |>
    dplyr::mutate(registro = datos[[id]], .before = 0)
}


validacion <-  validar(datos, "id", validador(reglas, "id", "cond"))

```


# Resultados

Tras crear un conjunto de reglas que cumpla con el objetivo propuesto, se lo constraste con la base de datos obtenida y se regristran los siguientes resultados (BUSCAR SINONIMOS).

## Estado de los individuos

Un individuo puede tener una sola condicion: "LIMPIO" o "SUCIO"; si cumple con la primera entonces se tiene un sujeto (en este caso, mujer) que no incumple ningna de las reglas establecidas, mientras que si cumple la segunda entonces signfica que no sigue al menos una de ellas.

En este sentido, se analizó la base de datos y resulto que *239* mujeres tienen *inconsistencias*, por lo que *761* mujeres están limpias. La mayoria de aquellas que presentaron errores solo incumplen una sola regla, pero se registró un caso donde se incumplen un total de cuatro reglas: la mujer cuyo id es el 459 infringe las reglas 5, 8, 12 y 16.


## Errores más frecuentes

Existe la posibilidad de que no todas las reglas sean transgredidas; en este caso, solo 7 de 18 se incumplen. Se estudió cuáles son dichas reglas y cuántas veces son incumplidas:

```{r, message=F, warning=F, echo=F}
validacion_largo <-  tidyr::pivot_longer(validacion, -registro, names_to = "regla", values_to = "error") |> 
  mutate(regla = factor(regla,levels = reglas$id))

kableExtra::kable(validacion_largo |>
                    filter(error) |>
                    count(regla) |> 
                    arrange(-n) |> 
                    `colnames<-`(c("Regla", "N° de individuos")))
```

Como se puede ver, la regla n°10 es la que mayor cantidad de mujeres infringen. Esta está asociada con el correcto enrolamiento de ellas en el estudio, por lo que hay 153 mujeres que fueron mal admitidas. 


## Campos con más errores

Las reglas pueden agruparse en 3 grandes grupos o campos: EXISTENCIA, RANGO y CONSISTENCIA; según lo que evaluaba cada regla definida, se le fue asignado un campo para asi poder, al igual que en el apartado anterior, ver cuál es el que más fallas tienen:

```{r, message=F, warning=F, echo=F}
validacion_largo <- validacion_largo |>
  mutate(campo = rep(c(rep("Rango", times = 9), 
                   rep("Consistencia", times = 2),
                   rep("Existencia", times = 7)), times = 18000/18))

kableExtra::kable(validacion_largo |>
                    filter(error) |>
                    count(campo) |>
                    arrange(-n) |> 
                    `colnames<-`(c("Campo", "N° de errores"))) 
```

Tal parece ser que el campo con mayor cantidad de errores es "CONSISTENCIA", las reglas incluidas en este grupo fueron las n°10 y n°11.


## Gráfico

Se muestran los 1000 individuos y sus resultados en cada una de las reglas.

```{r, message=F, warning=F, echo=FALSE}
library(ggplot2)
g1 <- ggplot(validacion_largo[1:4500,])+
  aes(x = registro, y = regla, fill = error)+
  geom_tile(width = 0.7, height = .9, color = "black")+
  scale_fill_manual(values = c("skyblue2","firebrick3","gray"))+
  theme_bw()
g2 <- ggplot(validacion_largo[4501:9000,])+
  aes(x = registro, y = regla, fill = error)+
  geom_tile(width = 0.7, height = .9, color = "black")+
  scale_fill_manual(values = c("skyblue2","firebrick3","gray"))+
  theme_bw()
g3 <- ggplot(validacion_largo[9001:13500,])+
  aes(x = registro, y = regla, fill = error)+
  geom_tile(width = 0.7, height = .9, color = "black")+
  scale_fill_manual(values = c("skyblue2","firebrick3","gray"))+
  theme_bw()
g4 <- ggplot(validacion_largo[13501:18000,])+
  aes(x = registro, y = regla, fill = error)+
  geom_tile(width = 0.7, height = .9, color = "black")+
  scale_fill_manual(values = c("skyblue2","firebrick3","gray"))+
  theme_bw()


Grafico <- g1 + g2 + g3 + g4 + plot_layout(ncol = 1, guides = "collect", axes = "collect")

Grafico
```

